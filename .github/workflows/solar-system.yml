name: Solar System Workflow

on:
  workflow_dispatch: 
  push:
    branches: 
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repositery
        uses: actions/checkout@v4
        
      - name: Setup nodejs version -18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Store/Use Caches NPM
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        id: Node-Js-Id
        run: npm test

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: MOCHA-TEST-RESULTS
          path: test-results.xml 

  code-coverage:
    name: Running Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repositery
        uses: actions/checkout@v4

      - name: Setup nodejs version -18
        uses: actions/setup-node@v4
        with:
          node-version: 18      
      
      - name: Store/Use Caches NPM
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          
      - name: Install Dependencies
        run: npm install

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: COVERAGE_RESULTS
          path: coverage
          retention-days: 5 

  Docker_Login:
    name: Containerization
    needs: [unit-testing, code-coverage]
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo
        uses: actions/checkout@v4

      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}